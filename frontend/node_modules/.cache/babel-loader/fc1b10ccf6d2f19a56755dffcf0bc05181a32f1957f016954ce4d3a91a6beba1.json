{"ast":null,"code":"import api from '../api'; // Importa a instância do Axios configurada\n\nexport default {\n  name: 'QuestionsList',\n  data() {\n    return {\n      questions: [],\n      // Armazena as perguntas\n      loading: false,\n      // Indica se os dados estão carregando\n      error: null // Armazena mensagens de erro, se houver\n    };\n  },\n  mounted() {\n    this.fetchQuestions(); // Busca as perguntas ao montar o componente\n  },\n  methods: {\n    async fetchQuestions() {\n      this.loading = true; // Ativa o indicador de carregamento\n      this.error = null; // Limpa erros anteriores\n      try {\n        const response = await api.get('questions/'); // Faz a requisição\n        this.questions = response.data; // Armazena as perguntas no estado\n      } catch (err) {\n        this.error = 'Failed to load questions'; // Define a mensagem de erro\n        console.error(err); // Loga o erro no console\n      } finally {\n        this.loading = false; // Desativa o indicador de carregamento\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","questions","loading","error","mounted","fetchQuestions","methods","response","get","err","console"],"sources":["/app/src/components/QuestionsList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Questions</h1>\n    <ul>\n      <li v-for=\"question in questions\" :key=\"question.id\">\n        {{ question.text }}\n      </li>\n    </ul>\n    <div v-if=\"loading\">Loading...</div>\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\n  </div>\n</template>\n\n<script>\nimport api from '../api'; // Importa a instância do Axios configurada\n\nexport default {\n  name: 'QuestionsList',\n  data() {\n    return {\n      questions: [], // Armazena as perguntas\n      loading: false, // Indica se os dados estão carregando\n      error: null, // Armazena mensagens de erro, se houver\n    };\n  },\n  mounted() {\n    this.fetchQuestions(); // Busca as perguntas ao montar o componente\n  },\n  methods: {\n    async fetchQuestions() {\n      this.loading = true; // Ativa o indicador de carregamento\n      this.error = null; // Limpa erros anteriores\n      try {\n        const response = await api.get('questions/'); // Faz a requisição\n        this.questions = response.data; // Armazena as perguntas no estado\n      } catch (err) {\n        this.error = 'Failed to load questions'; // Define a mensagem de erro\n        console.error(err); // Loga o erro no console\n      } finally {\n        this.loading = false; // Desativa o indicador de carregamento\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilo básico para o componente */\n.error {\n  color: red;\n}\n</style>\n"],"mappings":"AAcA,OAAOA,GAAE,MAAO,QAAQ,EAAE;;AAE1B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,OAAO,EAAE,KAAK;MAAE;MAChBC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACH,OAAM,GAAI,IAAI,EAAE;MACrB,IAAI,CAACC,KAAI,GAAI,IAAI,EAAE;MACnB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMT,GAAG,CAACU,GAAG,CAAC,YAAY,CAAC,EAAE;QAC9C,IAAI,CAACP,SAAQ,GAAIM,QAAQ,CAACP,IAAI,EAAE;MAClC,EAAE,OAAOS,GAAG,EAAE;QACZ,IAAI,CAACN,KAAI,GAAI,0BAA0B,EAAE;QACzCO,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC,EAAE;MACtB,UAAU;QACR,IAAI,CAACP,OAAM,GAAI,KAAK,EAAE;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}